{"version":3,"sources":["logo.svg","components/pokemonCard.js","components/Dog.js","components/pokedex.js","components/pokemonGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PokemonCard","Component","imgEnd","parametrai","this","props","name","type","base_experience","id","Math","floor","random","className","src","Pokedex","pokemon","console","log","map","p","defaultProps","PokemonGame","hand2","i","push","hand1","length","randIndex","randPokemon","splice","sum1","sum2","h1","h2","style","color","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62afebfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nimport \"./PokemonCard.css\";\r\n\r\nclass PokemonCard extends Component {\r\n  render() {\r\n    let imgEnd;\r\n    const { parametrai } = this.props;\r\n    const { name, type, base_experience } = parametrai;\r\n    // console.log(id);\r\n    // const { id, name, type, base_experience } = this.props;\r\n    // console.log(\"id\" + id);\r\n    const id = Math.floor(Math.random() * 200 + 1);\r\n    if (id > 9 && id < 100) {\r\n      imgEnd = \"0\" + id;\r\n    } else if (id < 10) {\r\n      imgEnd = \"00\" + id;\r\n    } else imgEnd = id;\r\n    return (\r\n      <div className=\"pokemonCard Pokemon-hover\">\r\n        <h1 className=\"PokemonCard-title\">{name}</h1>\r\n        <img\r\n          className=\"imgPokemon\"\r\n          src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${imgEnd}.png`}\r\n        />\r\n        <p className=\"PokemonCard-data\">Type: {type}</p>\r\n        <p className=\"PokemonCard-data\">EXP: {base_experience}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React, { Component } from \"react\";\r\nimport \"./Dog.css\";\r\n\r\nclass Dog extends Component {\r\n  render() {\r\n    return <div className=\"dog\">Dog</div>;\r\n  }\r\n}\r\n\r\nexport default Dog;\r\n","import React, { Component } from \"react\";\r\nimport PokemonCard from \"./pokemonCard\";\r\nimport \"./Pokedex.css\";\r\n\r\nclass Pokedex extends Component {\r\n  static defaultProps = [\r\n    { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\r\n    { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\r\n    { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\r\n    { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\r\n    { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\r\n    { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\r\n    { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\r\n    { id: 133, name: \"Eeevee\", type: \"normal\", base_experience: 65 }\r\n  ];\r\n\r\n  //  https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\r\n  render() {\r\n    // const { id, name, type, base_experience } = this.defaultProps[0];\r\n    const { pokemon } = this.props;\r\n    console.log(pokemon);\r\n\r\n    // const sum =\r\n    //   parameters1.base_experience +\r\n    //   parameters2.base_experience +\r\n    //   parameters3.base_experience +\r\n    //   parameters4.base_experience;\r\n    // const sum1 =\r\n    //   parameters5.base_experience +\r\n    //   parameters6.base_experience +\r\n    //   parameters7.base_experience +\r\n    //   parameters8.base_experience;\r\n    // console.log(\"sum \" + sum + \"sum1 \" + sum1);\r\n    // for(i=0;i<this.props.length;i++)\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {/* <p>{sum > sum1 ? \"Laimetojas\" : \"Pralaimejes\"}</p> */}\r\n        <div className=\"Pokedex\">\r\n          {pokemon.map(p => (\r\n            <PokemonCard parametrai={p} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // galasImg=\"00\"+defaultProps[0].id+\".png\"\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"./pokedex\";\r\nimport \"./pokemonGame.css\";\r\n\r\nclass PokemonGame extends Component {\r\n  static defaultProps = [\r\n    { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\r\n    { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\r\n    { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\r\n    { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\r\n    { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\r\n    { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\r\n    { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\r\n    { id: 133, name: \"Eeevee\", type: \"normal\", base_experience: 65 }\r\n  ];\r\n\r\n  render() {\r\n    let hand2 = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      hand2.push(this.props[i]);\r\n    }\r\n    let hand1 = [];\r\n\r\n    console.log(hand2.length);\r\n    var i = 0;\r\n    while (i < 4) {\r\n      let randIndex = Math.floor(Math.random() * hand2.length);\r\n      //   console.log(\"randomas \" + randIndex);\r\n      let randPokemon = hand2.splice(randIndex, 1)[0];\r\n\r\n      //   console.log(hand2);\r\n      hand1.push(randPokemon);\r\n      //   console.log(hand1);\r\n      i++;\r\n    }\r\n    console.log(hand2);\r\n    console.log(hand1);\r\n    let sum1 = 0;\r\n    let sum2 = 0;\r\n    hand1.map(h1 => (sum1 += h1.base_experience));\r\n    console.log(\"suma1 \" + sum1);\r\n    hand2.map(h2 => (sum2 += h2.base_experience));\r\n    console.log(\"suma2 \" + sum2);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Pokedex</h1>\r\n\r\n        {sum1 > sum2 ? (\r\n          <h2 style={{ color: \"green\" }}>Laimetojas</h2>\r\n        ) : sum1 < sum2 ? (\r\n          <h2 style={{ color: \"red\" }}>Pralaimejes</h2>\r\n        ) : (\r\n          <h2 style={{ color: \"blue\" }}>Lygiosios</h2>\r\n        )}\r\n\r\n        <Pokedex pokemon={hand1} />\r\n        <h2 className=\"pokemonGame-VS\">VS</h2>\r\n        {sum1 < sum2 ? (\r\n          <h2 style={{ color: \"green\" }}>Laimetojas</h2>\r\n        ) : sum1 > sum2 ? (\r\n          <h2 style={{ color: \"red\" }}>Pralaimejes</h2>\r\n        ) : (\r\n          <h2 style={{ color: \"blue\" }}>Lygiosios</h2>\r\n        )}\r\n        <Pokedex pokemon={hand2} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonGame;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dog from \"./components/Dog\";\nimport Pokedex from \"./components/pokedex\";\nimport PokemonGame from \"./components/pokemonGame\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Pokedex /> */}\n      <PokemonGame />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}